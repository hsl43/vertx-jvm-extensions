apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

def bintrayUser
def bintrayApiKey

File propertiesFile = project.rootProject.file('local.properties')

if(propertiesFile.exists()) {
  Properties properties = new Properties()
  properties.load(propertiesFile.newDataInputStream())

  bintrayUser = properties.getProperty('bintray.user')
  bintrayApiKey = properties.getProperty('bintray.key')

} else {
  bintrayUser = System.getenv('BINTRAY_USER')
  bintrayApiKey = System.getenv('BINTRAY_KEY')
}

ext.configureBintrayUploadTask = { packageName ->
  final def publicationName

  if(packageName.endsWith('vertx.core.ext')) {
    publicationName = 'CorePublication'
  } else if(packageName.endsWith('vertx.reactivex.ext')) {
    publicationName = 'RxJava2Publication'
  } else if(packageName.endsWith('vertx.rxjava.ext')) {
    publicationName = 'RxJava1Publication'
  } else {
    throw new IllegalArgumentException("Cannot configure publication for unexpected package name [$packageName]")
  }
  
  bintray {
    user = bintrayUser
    key = bintrayApiKey
    publications = ["$publicationName"]

    publish = true
    override = true

    pkg {
      repo = 'vertx-ext'
      name = "$packageName"
      userOrg = 'labs2160'
      licenses = ['Apache-2.0']
      websiteUrl = 'https://github.com/hsl43/vertx-jvm-extensions'
      issueTrackerUrl = 'https://github.com/hsl43/vertx-jvm-extensions/issues'
      vcsUrl = 'https://github.com/hsl43/vertx-jvm-extensions.git'
      publicDownloadNumbers = true

      version {
        name = "$libraryVersion"
//        desc = 'Gradle Bintray Plugin 1.0 final'  // TODO... optional
        released = new Date()
//        vcsTag = '1.3.0'  // TODO... optional
//        attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']  // TODO... optional
      }
    }
  }

  publishing {
    publications {
      "$publicationName"(MavenPublication) {
        from components.java
        groupId 'com.labs2160'
        artifactId "$archivesBaseName"
        version "$libraryVersion"
      }
    }
  }
}